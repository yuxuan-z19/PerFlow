{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PerFlow A domain-specific framework for performance analysis of large-scale parallel programs (\u9762\u5411\u6027\u80fd\u5206\u6790\u9886\u57df\u7684\u7f16\u7a0b\u6846\u67b6) Introduction (\u7b80\u4ecb) PerFlow\u662f\u4e00\u5957\u96c6\u6210\u4e86\u6027\u80fd\u6570\u636e\u91c7\u96c6\u548c\u5206\u6790\u7684\u5168\u94fe\u5de5\u5177\u3002 \u5728\u6027\u80fd\u6570\u636e\u91c7\u96c6\u9636\u6bb5\uff0cPerFlow\u7ed3\u5408\u57fa\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u9759\u6001\u5206\u6790\u548c\u57fa\u4e8e\u91c7\u6837\u7684\u52a8\u6001\u5206\u6790\u3002 Performance analysis is widely used to identify performance issues of parallel applications. However, complex communications and data dependence, as well as the interactions between different kinds of performance issues make high-efficiency performance analysis even harder. Although a large number of performance tools have been designed, accurately pinpointing root causes for such complex performance issues still needs specific in-depth analysis. To implement each such analysis, significant human efforts and domain knowledge are normally required. To reduce the burden of implementing accurate performance analysis, we propose a domain specific programming framework, named PerFlow. PerFlow abstracts the step-by-step process of performance analysis as a dataflow graph. This dataflow graph consists of main performance analysis sub-tasks, called passes, which can either be provided by PerFlow\u2019s built-in analysis library, or be implemented by developers to meet their requirements. Moreover, to achieve effective analysis, we propose a Program Abstraction Graph to represent the performance of a program execution and then leverage various graph algorithms to automate the analysis. We demonstrate the efficacy of PerFlow by three case studies of real-world applications with up to 700K lines of code. Results show that PerFlow significantly eases the implementation of customized analysis tasks. In addition, PerFlow is able to perform analysis and locate performance bugs automatically and effectively. Quick Links (\u5feb\u901f\u94fe\u63a5) Github About (\u5173\u4e8ePerFlow) User Guide (\u4f7f\u7528\u6307\u5357) Documentation (\u6587\u6863) Publications (\u53d1\u8868) Yuyang Jin, Haojie Wang, Runxin Zhong, Chen Zhang, Jidong Zhai . PerFlow: a domain specific framework for automatic performance analysis of parallel applications[C]//Proceedings of the 27th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming. 2022: 177-191. [PDF] @inproceedings {jin2022perflow, title = {PerFlow: a domain specific framework for automatic performance analysis of parallel applications}, author = {Jin, Yuyang and Wang, Haojie and Zhong, Runxin and Zhang, Chen and Zhai, Jidong}, booktitle = {Proceedings of the 27th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming}, pages = {177--191}, year = {2022} } License","title":"Home"},{"location":"#perflow","text":"A domain-specific framework for performance analysis of large-scale parallel programs (\u9762\u5411\u6027\u80fd\u5206\u6790\u9886\u57df\u7684\u7f16\u7a0b\u6846\u67b6)","title":"PerFlow"},{"location":"#introduction","text":"PerFlow\u662f\u4e00\u5957\u96c6\u6210\u4e86\u6027\u80fd\u6570\u636e\u91c7\u96c6\u548c\u5206\u6790\u7684\u5168\u94fe\u5de5\u5177\u3002 \u5728\u6027\u80fd\u6570\u636e\u91c7\u96c6\u9636\u6bb5\uff0cPerFlow\u7ed3\u5408\u57fa\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u9759\u6001\u5206\u6790\u548c\u57fa\u4e8e\u91c7\u6837\u7684\u52a8\u6001\u5206\u6790\u3002 Performance analysis is widely used to identify performance issues of parallel applications. However, complex communications and data dependence, as well as the interactions between different kinds of performance issues make high-efficiency performance analysis even harder. Although a large number of performance tools have been designed, accurately pinpointing root causes for such complex performance issues still needs specific in-depth analysis. To implement each such analysis, significant human efforts and domain knowledge are normally required. To reduce the burden of implementing accurate performance analysis, we propose a domain specific programming framework, named PerFlow. PerFlow abstracts the step-by-step process of performance analysis as a dataflow graph. This dataflow graph consists of main performance analysis sub-tasks, called passes, which can either be provided by PerFlow\u2019s built-in analysis library, or be implemented by developers to meet their requirements. Moreover, to achieve effective analysis, we propose a Program Abstraction Graph to represent the performance of a program execution and then leverage various graph algorithms to automate the analysis. We demonstrate the efficacy of PerFlow by three case studies of real-world applications with up to 700K lines of code. Results show that PerFlow significantly eases the implementation of customized analysis tasks. In addition, PerFlow is able to perform analysis and locate performance bugs automatically and effectively.","title":"Introduction (\u7b80\u4ecb)"},{"location":"#quick-links","text":"Github About (\u5173\u4e8ePerFlow) User Guide (\u4f7f\u7528\u6307\u5357) Documentation (\u6587\u6863)","title":"Quick Links (\u5feb\u901f\u94fe\u63a5)"},{"location":"#publications","text":"Yuyang Jin, Haojie Wang, Runxin Zhong, Chen Zhang, Jidong Zhai . PerFlow: a domain specific framework for automatic performance analysis of parallel applications[C]//Proceedings of the 27th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming. 2022: 177-191. [PDF] @inproceedings {jin2022perflow, title = {PerFlow: a domain specific framework for automatic performance analysis of parallel applications}, author = {Jin, Yuyang and Wang, Haojie and Zhong, Runxin and Zhang, Chen and Zhai, Jidong}, booktitle = {Proceedings of the 27th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming}, pages = {177--191}, year = {2022} }","title":"Publications (\u53d1\u8868)"},{"location":"#license","text":"","title":"License"},{"location":"contact/","text":"Contact If you have any comments or questions regarding the use and installation of PerFlow, or want to report a bug you discovered, please send an email to ME (malito: jinyuyang AT tsinghua.edu.cn).","title":"Contact"},{"location":"contact/#contact","text":"If you have any comments or questions regarding the use and installation of PerFlow, or want to report a bug you discovered, please send an email to ME (malito: jinyuyang AT tsinghua.edu.cn).","title":"Contact"},{"location":"about/about/","text":"About PerFlow","title":"About PerFlow"},{"location":"about/about/#about-perflow","text":"","title":"About PerFlow"},{"location":"about/functionality/","text":"Functionality","title":"Functionality"},{"location":"about/functionality/#functionality","text":"","title":"Functionality"},{"location":"about/overview/","text":"Overview","title":"Overview"},{"location":"about/overview/#overview","text":"","title":"Overview"},{"location":"documentation/builtinmodel/","text":"","title":"Builtin Models"},{"location":"documentation/builtinpass/","text":"","title":"Builtin Passes"},{"location":"documentation/documentation/","text":"Documenation Python API Builtin Passes Builtin Models","title":"Documentation"},{"location":"documentation/documentation/#documenation","text":"Python API Builtin Passes Builtin Models","title":"Documenation"},{"location":"documentation/pythonapi/","text":"","title":"Python API"},{"location":"examples/example/","text":"Examples","title":"Examples"},{"location":"examples/example/#examples","text":"","title":"Examples"},{"location":"userguide/firstrun/","text":"Run with PerFlow","title":"Using PerFlow"},{"location":"userguide/firstrun/#run-with-perflow","text":"","title":"Run with PerFlow"},{"location":"userguide/gettingstarted/","text":"Getting Started Installation Using Perflow Customizing performance analysis tasks","title":"Getting Started"},{"location":"userguide/gettingstarted/#getting-started","text":"Installation Using Perflow Customizing performance analysis tasks","title":"Getting Started"},{"location":"userguide/installation/","text":"Getting started","title":"Installation"},{"location":"userguide/installation/#getting-started","text":"","title":"Getting started"},{"location":"userguide/performanceanalysis/","text":"Customizing performance analysis with PerFlow","title":"Customized Performance Analysis"},{"location":"userguide/performanceanalysis/#customizing-performance-analysis-with-perflow","text":"","title":"Customizing performance analysis with PerFlow"}]}